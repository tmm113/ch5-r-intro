clear
open exercise-1/exercise.R
hometown <- seattle
hometown <- "seattle"
my_name <- "Tim"
my_height <- 70
my_height <- "70 inches"
puppies <- 1
puppy_price <- "$1200"
total_cost <- "$1200"
puppies <- 2
total_cost <- "$2400"
too_expensive <- total_cost > $1000
puppy_price <- 1200
total_cost 2400
total_cost <- 2400
total_cost <- puppy_price * puppies
too_expensive <- total_cost > 1000
max_puppies <- 1000%%puppy_price
max_puppies <- 1000 %% puppy_price
puppy_price <- 1200
max_puppies <- 1000%%puppy_price
max_puppies <- 1000%/%puppy_price
install.packages(stringr)
install.packages("stringr")
library("stringr")
clear
my_name <- "Tim"
my_name <- Tim
my_name <- "Tim"
my_name <- "Tim Manalo"
name_length <- nchar(Tim Manalo)
name_length <- nchar(Tim_Manalo)
name_length <- nchar(my_name)
print(name_length)
now_doing <- paste(my_name) "is programming!"
now_doing <- pase(my_name, is programming!)
now_doing <- paste(my_name, "is programming!")
touupper(now_doing)
toupper(now_doing)
now_doing <- toupper(now_doing)
fav_1 <- 3
fav_2 <- 9
fav_1 <- fav_1/sqrt(201)
fav_2 <- fav_2/sqrt(201)
raw_sum <- sum(fav_1, fav_2)
round_sum <- round(raw_sum, 1)
round_1 <- round(fav_1, 1)
round_2 <- round(fav_2, 1)
sum_round <- sum(round_1, round_2)
max(round_sum, sum_round)
lyric <- "I like to eat apples and bananas"
intro <- substr(lyric, 13)
?substr
intro <- substr(lyric 1, 13)
intro <- substr(lyric, 1, 13)
fruits <- substr(lyric, 15, last)
fruits <- substr(lyric, 15, stop)
fruits <- substr(lyric, 15, nchar(lyric))
fruits_e <- gsub(a, e)
fruits_e <- gsub(lyrics, a, e)
?gsub
fruits_e <- gsub("a", "e", fruits)
fruits_o <- gsub("a", "o", fruits)
lyric_2 <- print(intro, fruits_e)
lyric_e <- paste(intro, fruits_e)
print(lyric_e)
print(intro, fruits_o)
print(paste(intro, fruits_o))
add_three <- sum(x, 3)
add_three <- function(value) {}
add_three <- function(value) {
value+3
}
ten <- add_three(7)
impterial_to_metric <- function(feet, inches) {
total_inches <- feet*12 + inches
}
View(impterial_to_metric)
View(impterial_to_metric)
View(impterial_to_metric)
View(impterial_to_metric)
imperial_to_metric <- function(feet, inches) {
total_inches <- feet*12 + inches
meters <- total_inches * 0.0254
return(meters)
}
height_in_meters <- imperial_to_metric(5, 10)
is_twice-as_long <- function(str_1, str_2){
if(nchar(str1) >= nchar(str2)*2) {
return TRUE
} else {
return FALSE
}
}
is_twice_as_long <- function(str1, str2) {
diff <- abs(nchar(str1) - nchar(str2))
min_length <- min(nchar(str1), nchar(str2))
diff >= min_length
}
is_twice_as_long(dog, doggos)
is_twice_as_long("dog", "doggos")
is_twice_as_long("doggos", "dog")
is_twice_as_long("dog", "dog")
is_twice_as_long("dog", "do")
describe_difference <- function(str1, str2) {
if(nchar(str1) > nchar(str2)) {
N <- nchar(str1) - nchar(str2)
sentence <- paste("Your first string is longer by", N, "characters")
} else if(nchar(str2) > nchar(str1)) {
N <- nchar(str2) - nchar(str1)
sentence <- paste("Your second string is longer by", N, "characters")
} else {
sentence <- paste("Your strings are the same length!")
}
sentence
}
describe_difference(dog, dog)
describe_difference("dog", "dog")
describe_difference("dog", "doggo")
describe_difference("doggo", "dog")
